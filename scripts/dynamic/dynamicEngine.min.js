const dynamicEngine={triggerContextChange(e){for(var t in dynamicEngine.expressions._evaluationRequests){t=dynamicEngine.expressions._evaluationRequests[t];t.context&&t._context.__handler__._usedProperties[e.contextProperty]&&dynamicEngine.expressions._evaluate(t)}},getGlobalSettings(e,t){t(null,{})},_isServer(){return!("undefined"!=typeof window&&window.document)},expressions:{_evaluationRequests:{},evaluate(e,t){var a=(e=e||{})["id"],e={callback:t,options:e,id:a||dynamicEngine.expressions._nanoid(),destroy(){dynamicEngine.expressions._destroyRequest(this.id)}};return a&&dynamicEngine.expressions._destroyRequest(a),dynamicEngine.expressions._evaluate(e),e},_evaluate(r){const i=dynamicEngine["expressions"],{id:d,callback:u}=r,c=r.options?.expression||"";i._prepareContext(r.options,(e,t)=>{try{var a={_usedProperties:{},get(e,t){return"__handler__"===t?this:t in e?(this._usedProperties[t]=!0,e[t]):void 0},set(){throw"not_allowed"}},n="`"+c+"`";r._context=new Proxy(t,a),r.context=t;var s=Function(`"use strict"; const context = this;return (${n})`).bind(r._context)(),o=(i._evaluationRequests[d]=r)._context.data.__handler__._usedProperties;dynamicEngine.datasources._fetchNeededDatasources({usedDatasources:o,extendedDatasources:r.options.extendedDatasources},(e,t)=>e?console.error("Error occurred while fetching data: ",e):void dynamicEngine.triggerContextChange({contextProperty:"data",data:t})),u(null,{evaluatedExpression:s,evaluationRequest:r})}catch(e){u(e)}})},_destroyRequest(e){delete dynamicEngine.expressions._evaluationRequests[e]},_getBaseContext(e,t){t(null,{})},getContext(e,t){t(null,{})},_prepareContext(n,s){dynamicEngine.expressions._getBaseContext(null,(e,a)=>{dynamicEngine.expressions.getContext({request:n},(e,t)=>{Object.assign(a,t,n.extendedContext),dynamicEngine.datasources._addDatasourcesData({baseContext:a}),s(null,a)})})},_nanoid(e=21){return crypto.getRandomValues(new Uint8Array(e)).reduce((e,t)=>e+=(t&=63)<36?t.toString(36):t<62?(t-26).toString(36).toUpperCase():62<t?"-":"_","")}},datasources:{datasourcesData:{},requestedDatasources:{},_addDatasourcesData({baseContext:e}){var t=this.datasourcesData;e.data=new Proxy(t,{_usedProperties:{},get(e,t){return"__handler__"===t?this:(this._usedProperties[t]=!0,e[t])}})},_fetchNeededDatasources({usedDatasources:s,extendedDatasources:o},r){s&&0<Object.keys(s).length&&dynamicEngine.datasources._getDatasources(null,(e,t)=>{if(e)return console.error("Error occurred while fetching data: ",e);if(t||o){t=t||[];let a=JSON.parse(JSON.stringify(t));if(o){let e=[];t.forEach(t=>{o.find(e=>e.id===t.id)||e.push(t)}),a=[...e,...o]}for(let t in s){var n;this.requestedDatasources[t]&&!(5e3<new Date-this.requestedDatasources[t].lastTimeFetched)||(n=a.find(e=>e.id===t))&&this.fetchDatasource({datasource:n},r)}}})},fetchDatasource({datasource:e},t){e.lastTimeFetched=new Date,"api"===(this.requestedDatasources[e.id]=e).type&&dynamicEngine.datasources._fetchApi({datasource:e},t)},_fetchApi({datasource:s},o){var e=dynamicEngine.datasources._evaluateDatasourceConfiguration([s.configuration?.url,s.configuration?.method,s.configuration?.headers,s.configuration?.body]);Promise.all(e).then(([e,,t,a])=>{const n={};t&&(n.headers=t),a&&(n.body=a),fetch(e,n).then(e=>e.json()).then(e=>{dynamicEngine.datasources.datasourcesData[s.id]=e,o(null,e)}).catch(e=>{o(e,null)})}).catch(e=>{o(e,null)})},_evaluateDatasourceConfiguration(e){const t=[];for(const s of e)s?t.push(new Promise((a,n)=>{dynamicEngine.expressions.evaluate({expression:s},(e,t)=>{e?n(e):(t.evaluationRequest.destroy(),a(t.evaluatedExpression))})})):t.push(Promise.resolve(""));return t},_getDatasources(e,a){dynamicEngine.getGlobalSettings(null,(e,t)=>e?a(e):t?.appDatasources&&0<t.appDatasources.length?a(null,t.appDatasources):void a(null,null))}}};
//# sourceMappingURL=dynamicEngine.min.js.map
