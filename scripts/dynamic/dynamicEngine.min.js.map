{"version":3,"sources":["../sdk/scripts/dynamic/dynamicEngine.js"],"names":["dynamicEngine","expressions","_evaluationRequests","evaluate","id","expression","extendedContext","callback","evaluationRequest","_nanoid","destroy","_destroyRequest","this","_evaluate","_prepareContext","err","context","preparedExpression","_getBaseContextProxy","contextProxy","key","hasOwnProperty","clonedKey","Object","defineProperty","get","_used","evaluatedExpression","Function","bind","options","_getBaseContext","getContext","baseContext","assign","_isServer","window","document","t","crypto","getRandomValues","Uint8Array","reduce","e","toString","toUpperCase","triggerExpressionContextChange","request","contextProperty"],"mappings":"AACA,MAAMA,cAAgB,CACrBC,YAAa,CACZC,oBAAqB,GASrBC,SAAS,CAACC,GAAAA,EAAIC,WAAAA,EAAYC,gBAAAA,GAAkBC,GACrCC,EAAoB,CACzBD,SAAAA,EACAF,WAAAA,EACAC,gBAAAA,EACAF,GAAIA,GAAMJ,cAAcC,YAAYQ,UACpCC,QAAS,WACRV,cAAcC,YAAYU,gBAAgBC,KAAKR,MAQjD,OAJIA,GACHJ,cAAcC,YAAYU,gBAAgBP,GAE3CJ,cAAcC,YAAYY,UAAUL,GAC7BA,GAERK,UAAW,SAASL,GACnBR,cAAcC,YAAYa,gBAAgB,CAACR,gBAAiBE,EAAkBF,iBAAkB,CAACS,EAAKC,KACrGR,EAAkBQ,QAAUA,EAC5BhB,cAAcC,YAAYC,oBAAoBM,EAAkBJ,IAAMI,EACtE,IACC,IAAIS,EAAqB,IAAMT,EAAkBH,WAAa,IAC9DL,cAAcC,YAAYiB,qBAAqB,KAAM,CAACH,EAAKI,KAG1D,IAAK,IAAIC,KAAOJ,EAEf,GAAIA,EAAQK,eAAeD,GAAM,CAChC,IAAIE,EAAYF,EAChBG,OAAOC,eAAeL,EAAcC,EAAK,CACxCK,IAAK,WAEJ,OADAN,EAAaO,MAAMJ,IAAa,EACzBN,EAAQM,MAMnBd,EAAkBW,aAAeA,EACjC,IAAIQ,EAAuBC,uDAAuDX,MAAuBY,KAAKV,EAAnFS,GAC3BpB,EAAkBD,SAAS,KAAMoB,KAEjC,MAAOZ,GACRP,EAAkBD,SAASQ,OAS9BJ,gBAAiB,SAASP,UAClBJ,cAAcC,YAAYC,oBAAoBE,IAOtDc,qBAAqBY,EAASvB,GAI7BA,EAAS,KAHc,CACtBmB,MAAO,MASTK,gBAAgBD,EAASvB,GAExBA,EAAS,KADS,KAQnByB,WAAWF,EAASvB,GACnBA,EAAS,KAAM,KAOhBO,gBAAgB,CAACR,gBAAAA,GAAkBC,GAClCP,cAAcC,YAAY8B,gBAAgB,KAAM,CAAChB,EAAKkB,KACrDjC,cAAcC,YAAY+B,WAAW,KAAM,CAACjB,EAAKC,KAChDO,OAAOW,OAAOD,EAAajB,EAASV,GACpCC,EAAS,KAAM0B,QAQlBE,YACC,QAA2B,oBAAXC,QAA0BA,OAAOC,WAMlD5B,QAAQ6B,EAAE,IACT,OAAOC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAII,OAAO,CAAEJ,EAAEK,IAAIL,IAAIK,GAAG,IAAI,GAAGA,EAAEC,SAAS,IAAID,EAAE,IAAIA,EAAE,IAAIC,SAAS,IAAIC,cAAgB,GAAFF,EAAK,IAAI,IAAK,KASnJG,+BAA+BhB,GAC9B,IAAK,IAAIV,KAAOpB,cAAcC,YAAYC,oBAAqB,CAC1D6C,EAAU/C,cAAcC,YAAYC,oBAAoBkB,GACxD2B,EAAQ5B,cAAgB4B,EAAQ5B,aAAaO,MAAMI,EAAQkB,kBAC9DhD,cAAcC,YAAYY,UAAUkC","file":"dynamicEngine.min.js","sourcesContent":["// eslint-disable-next-line no-redeclare\nconst dynamicEngine = {\n\texpressions: {\n\t\t_evaluationRequests: {},\n\t\t/**\n\t\t* Evaluate the received expression\n\t\t* @param {Object} options - The needed elements to evaluate the expression\n\t\t* @param {string} options.expression - The expression to be evaluated\n\t\t* @param {Object} options.extendedContext - Additional context to evaluate the expression against\n\t\t* @param {Function} callback - Returns the evaluated expression or error if existed\n\t\t* @public\n\t\t*/\n\t\tevaluate({id, expression, extendedContext}, callback) {\n\t\t\tconst evaluationRequest = {\n\t\t\t\tcallback,\n\t\t\t\texpression,\n\t\t\t\textendedContext,\n\t\t\t\tid: id || dynamicEngine.expressions._nanoid(),\n\t\t\t\tdestroy: function() {\n\t\t\t\t\tdynamicEngine.expressions._destroyRequest(this.id);\n\t\t\t\t}\n\t\t\t};\n\t\t\t// if explicit id is sent, destroy if exists\n\t\t\tif (id) {\n\t\t\t\tdynamicEngine.expressions._destroyRequest(id);\n\t\t\t}\n\t\t\tdynamicEngine.expressions._evaluate(evaluationRequest);\n\t\t\treturn evaluationRequest;\n\t\t},\n\t\t_evaluate: function(evaluationRequest) {\n\t\t\tdynamicEngine.expressions._prepareContext({extendedContext: evaluationRequest.extendedContext}, (err, context) => {\n\t\t\t\tevaluationRequest.context = context;\n\t\t\t\tdynamicEngine.expressions._evaluationRequests[evaluationRequest.id] = evaluationRequest;\n\t\t\t\ttry {\n\t\t\t\t\tlet preparedExpression = '`' + evaluationRequest.expression + '`';\n\t\t\t\t\tdynamicEngine.expressions._getBaseContextProxy(null, (err, contextProxy) => {\n\t\t\t\t\t\t// consider switching to javascript proxy (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy#finding_an_array_item_object_by_its_property)\n\t\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy#a_complete_traps_list_example\n\t\t\t\t\t\tfor (let key in context) {\n\t\t\t\t\t\t\t// eslint-disable-next-line no-prototype-builtins\n\t\t\t\t\t\t\tif (context.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tlet clonedKey = key; // should be cloned because key inside the getter is referencing the last key every time\n\t\t\t\t\t\t\t\tObject.defineProperty(contextProxy, key, {\n\t\t\t\t\t\t\t\t\tget: function() { \n\t\t\t\t\t\t\t\t\t\tcontextProxy._used[clonedKey] = true;\n\t\t\t\t\t\t\t\t\t\treturn context[clonedKey]; \n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\tevaluationRequest.contextProxy = contextProxy;\n\t\t\t\t\t\tlet evaluatedExpression =  Function(`\"use strict\"; const context = this;return (${preparedExpression})`).bind(contextProxy)();\n\t\t\t\t\t\tevaluationRequest.callback(null, evaluatedExpression);\n\t\t\t\t\t});\n\t\t\t\t} catch (err) {\n\t\t\t\t\tevaluationRequest.callback(err);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t* Get the base context\n\t\t* @param {string} id - The unique id of the request that should be deleted \n\t\t* @private\n\t\t*/\n\t\t_destroyRequest: function(id) {\n\t\t\tdelete dynamicEngine.expressions._evaluationRequests[id];\n\t\t},\n\t\t/**\n\t\t* Get the base context\n\t\t* @param {Function} callback - Returns the base baseContextProxy\n\t\t* @private\n\t\t*/\n\t\t_getBaseContextProxy(options, callback) {\n\t\t\tlet baseContextProxy = {\n\t\t\t\t_used: {}\n\t\t\t};\n\t\t\tcallback(null, baseContextProxy);\n\t\t},\n\t\t/**\n\t\t* Get the base context\n\t\t* @param {Function} callback - Returns the base context (shared between all platforms)\n\t\t* @private\n\t\t*/\n\t\t_getBaseContext(options, callback) {\n\t\t\tlet baseContext = {}; // shared functionality that (app/web/sdk) could use\n\t\t\tcallback(null, baseContext);\n\t\t},\n\t\t/**\n\t\t* @desc This function will be overridden in each platform; so it would get correctly the context of the platform\n\t\t* @param {Function} callback - Returns the context of the platform, which requested dynamicEngine.expressions\n\t\t* @public\n\t\t*/\n\t\tgetContext(options, callback) {\n\t\t\tcallback(null, {});\n\t\t},\n\t\t/**\n\t\t* @desc This function will merge the different contexts (baseContext, platform's context and the extendedContext) and return them\n\t\t* @param {Function} callback - Returns the final version of the context to be used in the evaluation\n\t\t* @private\n\t\t*/\n\t\t_prepareContext({extendedContext}, callback) { \n\t\t\tdynamicEngine.expressions._getBaseContext(null, (err, baseContext) => {\n\t\t\t\tdynamicEngine.expressions.getContext(null, (err, context) => {\n\t\t\t\t\tObject.assign(baseContext, context, extendedContext);\n\t\t\t\t\tcallback(null, baseContext);\n\t\t\t\t});     \n\t\t\t});\n\t\t},\n\t\t/**\n\t\t* @desc This function returns weather this file is loaded from a client or a server side\n\t\t* @private\n\t\t*/\n\t\t_isServer() {\n\t\t\treturn !(typeof window !== 'undefined' && window.document);\n\t\t},\n\t\t/**\n\t\t* Get unique id each time\n\t\t* @private\n\t\t*/\n\t\t_nanoid(t=21) {\n\t\t\treturn crypto.getRandomValues(new Uint8Array(t)).reduce(((t,e)=>t+=(e&=63)<36?e.toString(36):e<62?(e-26).toString(36).toUpperCase():e>62?'-':'_'),'');\n\t\t},\n\t\t/**\n\t\t* Trigger reevaluation when (onLogin, onLogout, appTheme change) happens\n\t\t* @param {Object} options - information about the triggered source (contextProperty, data)\n\t\t* @param {string} options.contextProperty - The event that have been triggered (onLogin, onLogout, appTheme change)\n\t\t* @param {Object} options.data - Data coming from the event triggering\n\t\t* @public\n\t\t*/\n\t\ttriggerExpressionContextChange(options) {\n\t\t\tfor (let key in dynamicEngine.expressions._evaluationRequests) {\n\t\t\t\tlet request = dynamicEngine.expressions._evaluationRequests[key];\n\t\t\t\tif (request.contextProxy && request.contextProxy._used[options.contextProperty]) {\n\t\t\t\t\tdynamicEngine.expressions._evaluate(request);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};"]}